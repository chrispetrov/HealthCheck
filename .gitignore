# Visual Studio Code
.vscode/

# Visual Studio
.vs/
*.suo
*.user
*.aps
*.bsc
*.dsw
*.ncb
*.opensdf
*.sdf
*.sln.docstates
*.vssscc
*.vspscc
*.vssscc

# Build outputs
[Dd]ebug/
[Rr]elease/
[Bb]in/
[Oo]bj/
*.dll
*.exe
*.pdb
*.tmp
*.log
*.user
*.o
*.lo
*.la
*.al
*.libs
*.so
*.a
*.pyc
*.pyo
*.rej
*.orig
*.min.js
*.min.css

# Node.js / npm
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.env
.DS_Store # macOS specific
Thumbs.db # Windows specific

# Angular specific
dist/ # Angular build output.
.angular/cache/
.env.*.local
!src/environments/*.ts # Keep environment files
!src/environments/*.prod.ts # Keep prod environment files

# ASP.NET Core specific
appsettings.Development.json # Usually ignored to keep local settings out
appsettings.Production.json # Usually ignored for secrets management
appsettings.*.json # Only if you manage environments differently
secrets.json # User secrets for development
**/appsettings.json # If you have it nested
*.bak
*.pubxml
*.pfx
*.cer
*.snk
UserSecrets
Connected Services
obj/
bin/

# wwwroot
# IMPORTANT: If your frontend build process consistently puts files into wwwroot,
# you might want to ignore wwwroot to avoid committing build artifacts.
# However, if you're not yet automatically building frontend into wwwroot
# and need wwwroot's content for the backend to run, you might uncomment this for now.
# A common pattern is to only commit wwwroot if it contains static assets
# that are not generated by the frontend build, or a placeholder index.html.
# For now, if you just created it, you might want to INCLUDE it until your build process is robust.
# wwwroot/